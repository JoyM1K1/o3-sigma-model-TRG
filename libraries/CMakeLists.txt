cmake_minimum_required(VERSION 2.8)
project(lib)

if (APPLE)
    set(CMAKE_CXX_STANDARD 11)
    set(CMAKE_CXX_FLAGS "-std=c++11 -fopenmp -Wl,-stack_size -Wl,100000000 -lgsl -lgslcblas")

    include_directories($ENV{MKL_DIR}/include)
    link_directories($ENV{MKL_DIR}/lib)
    include_directories($ENV{GSL_DIR}/include)
#    link_directories($ENV{GSL_DIR}/lib)
else ()
    set(CMAKE_CXX_COMPILER icpc)
    set(CMAKE_CXX_FLAGS "-std=c++11 -mkl -axMIC-AVX512 -qopenmp -lgsl -lgslcblas")
endif ()

add_library(spherical_harmonics STATIC ./src/spherical_harmonics.cpp)
add_library(gauss_quadrature STATIC ./src/gauss_quadrature.cpp)
add_library(frac STATIC ./src/frac.cpp)
add_library(CG STATIC ./src/CG.cpp)
add_library(legendre_root STATIC src/legendre_root.cpp)
add_library(TRG STATIC ./src/TRG.cpp)
add_library(HOTRG STATIC ./src/HOTRG.cpp)
add_library(tensor STATIC ./src/tensor.cpp)
add_library(impure_tensor STATIC ./src/impure_tensor.cpp)
add_library(time_counter STATIC ./src/time_counter.cpp)
target_include_directories(spherical_harmonics INTERFACE ./include)
target_include_directories(gauss_quadrature INTERFACE ./include)
target_include_directories(frac INTERFACE ./include)
target_include_directories(CG INTERFACE ./include)
target_include_directories(legendre_root INTERFACE ./include)
target_include_directories(TRG INTERFACE ./include)
target_include_directories(HOTRG INTERFACE ./include)
target_include_directories(tensor INTERFACE ./include)
target_include_directories(impure_tensor INTERFACE ./include)
target_include_directories(time_counter INTERFACE ./include)

target_link_libraries(gauss_quadrature legendre_root)
target_link_libraries(TRG spherical_harmonics gauss_quadrature time_counter)
target_link_libraries(HOTRG spherical_harmonics gauss_quadrature time_counter)